DOCKER_COMPOSE := $(shell which docker-compose)

ifeq (${DOCKER_COMPOSE},)
DOCKER_COMPOSE = docker compose
endif

## Recipes

.DEFAULT_GOAL := help
.PHONY: help
help:
	@echo "Recipes for local development and testing"
	@echo "They require to have installed and found in PATH:"
	@echo
	@echo "* Docker with compose (e.g. 'docker compose' or 'docker-comose')"
	@echo "* Node v18.7.x and its corresponding NPM\n"
	@awk 'BEGIN { \
		FS = ":.*##"; \
		printf "Usage:\n  make \033[36m<target>\033[0m\n" \
	} \
	/^[a-zA-Z_-]+:.*?##/ { \
		printf "  \033[36m%-17s\033[0m %s\n", $$1, $$2 \
	} \
	/^##@/ { \
		printf "\n\033[1m%s\033[0m\n", substr($$0, 5) \
	} ' $(MAKEFILE_LIST)


.PHONY: clean
clean: ## Remove resources generated by the local environment, tests, etc.
	cd tests; ${DOCKER_COMPOSE} down -v --remove-orphans --rmi all
	cd tests/smart-contract; npm run clean
	@-docker image rm ethereum/solc:0.8.18

.PHONY: local-env-start
local-env-start: ## Start the local environment (IPFS, Ethereum, etc.)
	cd tests; ${DOCKER_COMPOSE} up -d
	$(MAKE) .deploy-smart-contract

.PHONY: local-env-stop
local-env-stop: ## Stops the local environment
	cd tests; ${DOCKER_COMPOSE} down

.PHONY: .deploy-smart-contract
.deploy-smart-contract: tests/smart-contract/node_modules
	cd tests/smart-contract; npm run truffle -- migrate

tests/smart-contract/node_modules:
	cd tests/smart-contract; npm install
